function e(e,n,s,t){Object.defineProperty(e,n,{get:s,set:t,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}var s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},r={},i=s.parcelRequire7e89;null==i&&((i=function(e){if(e in t)return t[e].exports;if(e in r){var n=r[e];delete r[e];var s={id:e,exports:{}};return t[e]=s,n.call(s.exports,s,s.exports),s.exports}var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,n){r[e]=n},s.parcelRequire7e89=i),i.register("27Lyk",(function(n,s){var t,r;e(n.exports,"register",(()=>t),(e=>t=e)),e(n.exports,"resolve",(()=>r),(e=>r=e));var i={};t=function(e){for(var n=Object.keys(e),s=0;s<n.length;s++)i[n[s]]=e[n[s]]},r=function(e){var n=i[e];if(null==n)throw new Error("Could not resolve bundle with id "+e);return n}})),i("27Lyk").register(JSON.parse('{"f9fpV":"index.8430df39.js","eyyUD":"icons.c14567a0.svg"}'));const a="https://forkify-api.herokuapp.com/api/v2/recipes",c=async function(e){try{const s=await Promise.race([fetch(e),(n=10,new Promise((function(e,s){setTimeout((function(){s(new Error(`Request took too long! Timeout after ${n} second`))}),1e3*n)})))]);return await s.json()}catch(e){console.log("error ",e)}var n},o={recipe:{},search:{query:"",result:[],resultPagePage:5,defaultPage:2}},l=function(e=o.search.defaultPage){o.search.defaultPage=e;let n=(e-1)*o.search.resultPagePage,s=e*o.search.resultPagePage;return o.search.result.slice(n,s)};var u;u=new URL(i("27Lyk").resolve("eyyUD"),import.meta.url).toString();var d=new class{#e=document.querySelector(".recipe");#n;render(e){console.log(e),this.#n=e;const n=this.#s();this.#t(),this.#e.insertAdjacentHTML("afterbegin",n)}update(e){if(!e||Array.isArray(e)&&0!==e.length)return console.log("Error to update");this.#n=e;const n=this.#s(),s=document.createRange().createContextualFragment(n),t=Array.from(s.querySelectorAll("*")),r=Array.from(this.#e.querySelectorAll("*"));t.forEach(((e,n)=>{const s=r[n];e.isEqualNode(s)||""===e.firstChild.nodeValue.trim()||(s.textContent=e.textContent),e.isEqualNode(s)||Array.from(e.attributes).forEach((e=>s.setAttribute(e.name,e.value)))})),console.log(t)}#t(){this.#e.innerHTML=""}showSpinner=function(){const e=`<div class="spinner">\n        <svg>\n          <use href="${n(u)}#icon-loader"></use>\n        </svg>\n      </div>`;this.#e.insertAdjacentHTML("afterbegin",e)};addHandlerRender(e){["hashchange","load"].forEach((n=>window.addEventListener(n,e)))}addUpdateServings(e){this.#e.addEventListener("click",(function(n){const s=n.target.closest(".btn--tiny");if(!s)return;let t=+s.dataset.increase;t>0&&e(t)}))}#s(){return`\n            <figure class="recipe__fig">\n                <img src="${this.#n.imageUrl}" alt="${this.#n.title}" class="recipe__img" />\n                <h1 class="recipe__title">\n                <span>${this.#n.title}</span>\n                </h1>\n            </figure>\n\n            <div class="recipe__details">\n                <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                    <use href="${n(u)}#icon-clock"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--minutes">${this.#n.cookingTime}</span>\n                <span class="recipe__info-text">minutes</span>\n                </div>\n                <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                    <use href="${n(u)}#icon-users"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--people">${this.#n.servings}</span>\n                <span class="recipe__info-text">servings</span>\n\n                <div class="recipe__info-buttons">\n                    <button class="btn--tiny btn--increase-servings" data-increase="${this.#n.servings-1}">\n                    <svg>\n                        <use href="${n(u)}#icon-minus-circle"></use>\n                    </svg>\n                    </button>\n                    <button class="btn--tiny btn--increase-servings" data-increase="${this.#n.servings+1}">\n                    <svg>\n                        <use href="${n(u)}#icon-plus-circle"></use>\n                    </svg>\n                    </button>\n                </div>\n                </div>\n\n                <div class="recipe__user-generated">\n                <svg>\n                    <use href="${n(u)}#icon-user"></use>\n                </svg>\n                </div>\n                <button class="btn--round">\n                <svg class="">\n                    <use href="${n(u)}#icon-bookmark-fill"></use>\n                </svg>\n                </button>\n            </div>\n\n            <div class="recipe__ingredients">\n                <h2 class="heading--2">Recipe ingredients</h2>\n                <ul class="recipe__ingredient-list">\n                ${this.#n.ingredients.map((e=>`<li class="recipe__ingredient">\n                    <svg class="recipe__icon">\n                    <use href="${n(u)}#icon-check"></use>\n                    </svg>\n                    <div class="recipe__quantity">${e.quantity?e.quantity:"---"}</div>\n                    <div class="recipe__description">\n                    <span class="recipe__unit">${e.unit}</span>\n                    ${e.description}\n                    pasta\n                    </div>\n                </li>`)).join("")}\n                </ul>\n            </div>\n\n            <div class="recipe__directions">\n                <h2 class="heading--2">How to cook it</h2>\n                <p class="recipe__directions-text">\n                This recipe was carefully designed and tested by\n                <span class="recipe__publisher">${this.#n.publisher}</span>. Please check out\n                directions at their website.\n                </p>\n                <a\n                class="btn--small recipe__btn"\n                href="${this.#n.sourceUrl}"\n                target="_blank"\n                >\n                <span>Directions</span>\n                <svg class="search__icon">\n                    <use href="${n(u)}#icon-arrow-right"></use>\n                </svg>\n                </a>\n            </div>`}};var g=new class{#e=document.querySelector(".search");#r=document.querySelector(".results");_errorMessage="No result found with you query";render(e){this.res=e,console.log("Render ",e,"this.res ",this.res);const n=this.#s();this.#i(),this.#r.insertAdjacentHTML("afterbegin",n)}getQuery(){const e=this.#e.querySelector(".search__field").value;return this.#i(),e}#i(){this.#e.querySelector(".search__field").value=""}addSearchHandler(e){console.log(this.#e),this.#e.addEventListener("submit",(function(n){n.preventDefault(),e()})),["click"].forEach((n=>addEventListener(n,e)))}#s(){const e=window.location.hash.slice(1);return console.log(e),this.res.length?this.res.map((e=>`<li class="preview">\n                <a class="preview__link" href="#${e.id}">\n                  <figure class="preview__fig">\n                    <img src="${e.imageUrl}" alt="${e.title}" />\n                  </figure>\n                  <div class="preview__data">\n                    <h4 class="preview__title">${e.title}</h4>\n                    <p class="preview__publisher">${e.publisher}</p>\n                    <div class="preview__user-generated">\n                      <svg>\n                        <use href="${n(u)}#icon-user"></use>\n                      </svg>\n                    </div>\n                  </div>\n                </a>\n              </li>`)).join(""):`<h2>${this._errorMessage}</h2>`}};var p=new class{_parentElement=document.querySelector(".pagination");render(e){this.res=e;const n=this._generatorMarkup();this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",n)}_clear(){this._parentElement.innerHTML=""}addNextPrevClick(e){this._parentElement.addEventListener("click",(function(n){const s=n.target.closest(".btn--inline");console.log(s);const t=+s.dataset.goto;console.log(t),e(t)}))}_generatorMarkup(){const e=this.res.defaultPage,s=Math.ceil(this.res.result.length/this.res.resultPagePage);return console.log(this.res.defaultPage," -- ",s," @@@ ",this.res.result,"####",this.res.resultPagePage),1===e&&s>1?`\n          <button class="btn--inline pagination__btn--next" data-goto="${e+1}">\n            <span>Page ${e+1}</span>\n            <svg class="search__icon">\n              <use href="${n(u)}#icon-arrow-right"></use>\n            </svg>\n          </button>`:e===s&&s>1?`<button class="btn--inline pagination__btn--prev" data-goto="${e-1}">\n            <svg class="search__icon">\n              <use href="${n(u)}#icon-arrow-left"></use>\n            </svg>\n            <span>Page ${e-1}</span>\n          </button>`:e<s?`<button class="btn--inline pagination__btn--prev" data-goto="${e-1}">\n            <svg class="search__icon">\n              <use href="${n(u)}#icon-arrow-left"></use>\n            </svg>\n            <span>Page ${e-1}</span>\n          </button>\n          <button class="btn--inline pagination__btn--next" data-goto="${e+1}">\n            <span>Page ${e+1}</span>\n            <svg class="search__icon">\n              <use href="${n(u)}#icon-arrow-right"></use>\n            </svg>\n          </button>`:" "}};const h=async function(){let e=window.location.hash.slice(1);try{d.showSpinner(),await async function(e){try{const n=await c(`${a}/${e}`),{recipe:s}=n.data;o.recipe={id:s.id,title:s.title,publisher:s.publisher,sourceUrl:s.source_url,imageUrl:s.image_url,cookingTime:s.cooking_time,servings:s.servings,ingredients:s.ingredients}}catch(e){console.log(e)}}(e),d.render(o.recipe)}catch(e){console.log("Error ",e)}},_=async function(){try{const e=g.getQuery();if(!e)return;await async function(e){try{o.search.query=e;const n=await c(`${a}?search=${e}`);o.search.result=n.data.recipes.map((e=>({id:e.id,title:e.title,publisher:e.publisher,imageUrl:e.image_url})))}catch(e){console.log(e)}}(e),g.render(l(o.search.defaultPage)),p.render(o.search)}catch(e){console.log("Error ",e)}},f=function(e){g.render(l(e)),p.render(o.search),console.log("page contoal")},v=function(e){var n;n=e,o.recipe.ingredients.forEach((e=>{e.quantity=e.quantity*n/o.recipe.servings})),o.recipe.servings=n,d.update(o.recipe)};d.addHandlerRender(h),d.addUpdateServings(v),g.addSearchHandler(_),p.addNextPrevClick(f);
//# sourceMappingURL=index.8430df39.js.map
